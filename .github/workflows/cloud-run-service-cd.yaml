name: Cloud Run Service CD

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      app_name:
        required: true
        type: string
      working_directory:
        type: string
        default: "."
    secrets:
      WORKLOAD_IDENTIFY_POOLS_PROVIDER:
        required: true
      GCP_SERVICE_ACCOUNT:
        required: true

jobs:
  setup:
    # Only allow run the CD flow in protected branch
    if: github.ref_protected == true

    runs-on: ubuntu-20.04

    defaults:
      run:
        shell: bash

    # Allow add the tag in the repo.
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'write'
      id-token: 'none'

    outputs:
      TARGETS: ${{ steps.setenv.outputs.TARGETS }}
      TARGET: ${{ steps.setenv.outputs.TARGET }}
      TARGET_FROM: ${{ steps.setenv.outputs.TARGET_FROM }}
      PIPELINE: ${{ steps.setenv.outputs.PIPELINE }}

    steps:
      # Checkout code
      - name: Checkout out the code
        uses: actions/checkout@v3

      - name: Setup targets
        uses: pwei1018/bcregistry-sre/.github/actions/setup-deployment-target@main
        with:
          environment: ${{ inputs.target }}
          app_name: ${{ inputs.app_name }}

      - id: setenv
        run: |
          echo "TARGETS=${{ env.DEPLOY_TARGETS }}" >> "$GITHUB_OUTPUT"
          echo "TARGET=${{ env.DEPLOY_TARGET }}" >> "$GITHUB_OUTPUT"
          echo "TARGET_FROM=${{ env.DEPLOY_TARGET_FROM }}" >> "$GITHUB_OUTPUT"
          echo "PIPELINE=${{ env.DEPLOY_PIPELINE }}" >> "$GITHUB_OUTPUT"

  deploy:
    needs: setup
    runs-on: ubuntu-20.04

    environment:
      name: "${{ needs.setup.outputs.TARGET }}"

    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }}

    # Allow add the tag in the repo.
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'write'
      id-token: 'write'

    steps:
      # Checkout code
      - name: Checkout out the code
        uses: actions/checkout@v3

      # Copy cloud build, cloud deploy and skaffold yaml files to the build
      - name: Copy deployment files
        uses: pwei1018/bcregistry-sre/.github/actions/cloud-deploy@main
        with:
          working-directory: ${{ inputs.working_directory }}

      # GCP authentication
      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTIFY_POOLS_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      # Trigger Cloud Deploy
      - name: Deployment
        working-directory: ${{ inputs.working_directory }}
        run: |-
          SHORT_SHA=$(git rev-parse --short HEAD)

          DB_UPGRADE="no"

          if [[ -n $(git status --porcelain --untracked-files=no migrations) ]]; then
            DB_UPGRADE="yes"
          fi

          gcloud builds submit \
            --substitutions _SHORT_SHA=$SHORT_SHA,_DB_UPGRADE=$DB_UPGRADE,_APP_NAME="${{ inputs.app_name }}",_DEPLOY_TARGETS="${{ needs.setup.outputs.TARGETS }}",_DEPLOY_TARGET="${{ needs.setup.outputs.TARGET }}",_DEPLOY_TARGETS_FROM="${{ needs.setup.outputs.TARGET_FROM }}",_DEPLOY_PIPELINE="${{ needs.setup.outputs.PIPELINE }}" \
            --config devops/gcp/cloudbuild.yaml