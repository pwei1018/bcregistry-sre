[metadata]
name = notify_api
url = https://github.com/bcgov/bcregistry-notify/notify-api
author = BC Registries SRE Team
author_email =
classifiers =
    Development Status :: Beta
    Intended Audience :: Developers / QA
    Topic :: Notify Service
    License :: OSI Anotifyoved :: Apache Software License
    Natural Language :: English
    Programming Language :: Python :: 3.10
license = Apache Software License Version 2.0
description = API for the BC Registries Notify Service
long_description = file: README.md
keywords =

[options]
zip_safe = True
python_requires = >=3.9
include_package_data = True
packages = find:

[options.package_data]
notify_api =

[wheel]
universal = 1

[bdist_wheel]
universal = 1

[aliases]
test = pytest

[flake8]
exclude = .git,*migrations*
max-line-length = 120
docstring-min-length=10
application_import_names=notify_api
per-file-ignores =
    *.py:I001
    */__init__.py:F401

[pycodestyle]
max_line_length = 120
ignore = E501
docstring-min-length=10
notes=FIXME,XXX # TODO is ignored
match_dir = src/notify_api
ignored-modules=flask_sqlalchemy
    sqlalchemy
per-file-ignores =
    */__init__.py:F401
good-names=
    b,
    d,
    i,
    e,
    f,
    k,
    q,
    u,
    v,
    ar,
    rv,
    logger,

[pylint]
ignore=migrations,test
notes=FIXME,XXX,TODO
ignored-modules=flask_sqlalchemy,sqlalchemy,SQLAlchemy,alembic,scoped_session
ignored-classes=scoped_session
disable=C0209,C0301,W0511,W0613,W0703,W1514,R0801,R0902,R0903,R0911,R0401,R1705,R1718,W3101
good-names=
    b,
    d,
    i,
    e,
    f,
    k,
    q,
    u,
    v,
    ar,
    id,
    rv,
    logger,

[isort]
line_length = 120
indent = 4
multi_line_output = 3
lines_after_imports = 2
include_trailing_comma = True

[tool:pytest]
minversion = 2.0
testpaths = tests
addopts = --verbose
    --strict
    -p no:warnings
    --cov=src --cov-report html:htmlcov --cov-report xml:coverage.xml
python_files = tests/*/test*.py
norecursedirs = .git .tox venv* requirements* build
log_cli = true
log_cli_level = 1
filterwarnings =
    ignore::UserWarning
markers =
    slow
    serial

[coverage:run]
branch = True
source =
    src/notify_api
omit =
    src/notify_api/wsgi.py
    src/notify_api/gunicorn_config.py

[report:run]
exclude_lines =
    pragma: no cover
    from
    import
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
